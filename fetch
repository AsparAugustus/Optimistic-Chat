'use strict';
const ethers = require('ethers')

// const rpc = curl https://kovan.infura.io/v3/388cf6c1966e447fb5ef8c539c445e00 -X POST  -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","method":"eth_getTransactionByHash","params": ["0x66a6b8a076c7c21941896089eb969040907e026e578ae4463d4c2da3ff6db47d"],"id":1}'

function FETCH () {
fetch('https://jsonplaceholder.typicode.com/todos/1')
.then(response => {
  if (response.ok) {
    console.log("SUCCESS!")
    response => response.json()
  }
}
  )
.then(json => console.log(json))
}

function POST() {
  fetch('https://kovan.infura.io/v3/388cf6c1966e447fb5ef8c539c445e00',{
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      "jsonrpc":"2.0",
      "method":"eth_getTransactionByHash",
      "params": ["0x66a6b8a076c7c21941896089eb969040907e026e578ae4463d4c2da3ff6db47d"],
      "id":1})
    }).then(response => response.json())
    .then(data => { 
      console.log("from :", data.result.from);
      console.log(ethers.utils.toUtf8String(data.result.input))
    })
}
const INFURA_ID = '388cf6c1966e447fb5ef8c539c445e00'
// const provider = new ethers.providers.JsonRpcProvider(`https://kovan.infura.io/v3/${INFURA_ID}`)
const provider = new ethers.providers.EtherscanProvider('kovan', 'U7SXTCTZGRPZ7K9JQ97CC63M94BYE8X5MQ');
const contract_addr = '0x8Ef54064246218F4b526d9F8b008E7aF9e587b35'

async function checkLastBlock() {
  let block = await provider.getBlock('latest')
  console.log(`[*] Searching block ${block.number}...`)
  
  if (block && block.transactions) {
    for (let txHash of block.transactions) {
      let tx = await provider.getTransaction(txHash)
      if (contract_addr.toLowerCase() == tx.to.toLowerCase()) {
        console.log(`[+] Transaction found on block ${ block.number }`)
        console.log(JSON.stringify(tx.from))
        console.log(JSON.stringify(ethers.utils.toUtf8String(tx.data)))
      }


    }
    
  }

  checkLastBlock()

}

async function checkHistory() {
  let history = await provider.getHistory(contract_addr)

  for (let [index, item] of history.entries())
  {
    if(index != 0) {
      console.log(item.from, ":  ")
      console.log(ethers.utils.toUtf8String(item.data))
      console.log("\n", item.timestamp, "\n")
    }
    
  }
}

// checkHistory()
checkLastBlock()





